---
# Available `vagrant_box` values include:
#   - geerlingguy/drupal-vm (pre-provisioned, based on Ubuntu 18.04)
#   - geerlingguy/centos8
#   - geerlingguy/debian10
#   - geerlingguy/ubuntu1804
vagrant_box: geerlingguy/drupal-vm

vagrant_user: vagrant
vagrant_synced_folder_default_type: virtualbox
vagrant_gui: false

# If you need to run multiple instances of Drupal VM, set a unique hostname,
# machine name, and IP address for each instance.
vagrant_hostname: adtalemteam.local
vagrant_machine_name: adtalemteam
vagrant_ip: 192.168.178.129

# A list of synced folders, with the keys 'local_path', 'destination', and
# a 'type' of [nfs|rsync|smb] (leave empty for slow native shares). See
# http://docs.drupalvm.com/en/latest/getting-started/syncing-folders/ for more.
vagrant_synced_folders:
  # The first synced folder will be used for the default Drupal installation, if
  # any of the build_* settings are 'true'. By default the folder is set to
  # the drupal-vm folder.
  - local_path: .
    destination: /var/www/adtalemteam
    type: virtualbox
    options_override:
      owner: "vagrant"
      group: "www-data"
      mount_options: ["dmode=775,fmode=764"]
    create: true
  - local_path: .
    destination: /vagrant
    type: virtualbox

# Memory and CPU to use for this VM.
vagrant_memory: 4096
vagrant_cpus: 2

# Ensure vagrant plugins are installed.
vagrant_plugins:
  - name: vagrant-vbguest
  - name: vagrant-hostsupdater

ansible_python_interpreter: python3

# Minimum required versions.
drupalvm_vagrant_version_min: '2.2.0'
drupalvm_ansible_version_min: '2.8'

# Force use of ansible_local provisioner, even if Ansible is installed on host.
force_ansible_local: false

# The web server software to use. Can be either 'apache' or 'nginx'.
drupalvm_webserver: apache

# The database system to use. Can be either 'mysql' or 'pgsql'.
drupal_db_backend: mysql

# Set 'drupal_build_makefile' to 'false' and this to 'true' if you are using a
# composer based site deployment strategy.
drupal_build_composer: false
drupal_composer_path: false
drupal_composer_install_dir: "/var/www/adtalemteam"
drupal_composer_dependencies:
  - "drush/drush:^9"
  - "drupal/devel:^2.0"

# Set this to 'true' and 'drupal_build_makefile', 'drupal_build_composer' to 'false'
# if you are using Composer's create-project as a site deployment strategy.
drupal_build_composer_project: false

# Set this to 'false' if you don't need to install drupal (using the drupal_*
# settings below), but instead copy down a database (e.g. using drush sql-sync).
drupal_install_site: false

# Required Drupal settings.
drupal_domain: "adtalem.team"
drupal_core_path: "{{ drupal_composer_install_dir }}/html"
drupal_core_owner: "{{ drupalvm_user }}"
drupal_db_user: "{{ vagrant_machine_name }}"
drupal_db_password: "{{ vagrant_machine_name }}"
drupal_db_name: "{{ vagrant_machine_name }}"
drupal_db_host: localhost

# Cron jobs are added to the vagrant user's crontab. Keys include name
# (required), minute, hour, day, weekday, month, job (required), and state.
drupalvm_cron_jobs: []

# Drupal VM automatically creates a drush alias file in your ~/.drush folder if
# this variable is 'true'.
configure_drush_aliases: true
drush_local_path: "{{ drupal_composer_install_dir }}/{{ drupal_composer_bin_dir }}/drush"
drush_remote_path: "/var/www/adtalem.team/vendor/drush/drush/drush"
drush_aliases_template_dir: "{{ post_provision_dir }}/templates"
drush_aliases_host_template: "../../../../box/post_provision/templates/drupalvm.aliases.drushrc.php.j2"
drush_aliases_host_template_yml: "../../../../box/post_provision/templates/drupalvm.aliases.yml.j2"
drush_aliases_guest_template: "../../../../box/post_provision/templates/drupalvm-local.aliases.drushrc.php.j2"
drush_aliases_guest_template_yml: "../../../../box/post_provision/templates/drupalvm-local.aliases.yml.j2"

# Helper variable to configure the PHP-FPM connection for each Apache
# VirtualHost in the `apache_vhosts` list.
apache_vhost_php_fpm_parameters: |
    <FilesMatch \.php$>
      SetHandler "proxy:fcgi://{{ php_fpm_listen }}"
    </FilesMatch>

# Apache VirtualHosts. Add one for each site you are running inside the VM. For
# multisite deployments, you can point multiple servernames at one documentroot.
# View the geerlingguy.apache Ansible Role README for more options.
apache_vhosts:
  - servername: "{{ vagrant_hostname }}"
    sitealias: "{{ vagrant_machine_name }}.local"
    serverenv: "local"
    documentroot: "{{ drupal_core_path }}"
    extra_parameters: "{{ apache_vhost_php_fpm_parameters }}"

  - servername: "adminer.{{ vagrant_hostname }}"
    sitealias: "adminer.vm"
    serverenv: "vm"
    documentroot: "{{ adminer_install_dir }}"
    extra_parameters: "{{ apache_vhost_php_fpm_parameters }}"

  - servername: "xhprof.{{ vagrant_hostname }}"
    sitealias: "xhprof.vm"
    serverenv: "vm"
    documentroot: "{{ php_xhprof_html_dir }}"
    extra_parameters: "{{ apache_vhost_php_fpm_parameters }}"

  - servername: "pimpmylog.{{ vagrant_hostname }}"
    sitealias: "pimpmylog.vm"
    serverenv: "vm"
    documentroot: "{{ pimpmylog_install_dir }}"
    extra_parameters: "{{ apache_vhost_php_fpm_parameters }}"

  - servername: "{{ vagrant_ip }}"
    sitealias: "dashboard.vm"
    serverenv: "vm"
    serveralias: "dashboard.{{ vagrant_hostname }}"
    documentroot: "{{ dashboard_install_dir }}"
    extra_parameters: "{{ apache_vhost_php_fpm_parameters }}"

apache_packages_state: latest
apache_remove_default_vhost: true
apache_mods_enabled:
  - expires.load
  - headers.load
  - ssl.load
  - rewrite.load
  - proxy.load
  - proxy_fcgi.load

# MySQL Configuration.
mysql_root_password: root
mysql_slow_query_log_enabled: true
mysql_slow_query_time: 2
mysql_wait_timeout: 300
adminer_install_filename: index.php

# MySQL databases and users.
mysql_databases:
  - name: "{{ vagrant_machine_name }}"
    encoding: utf8
    collation: utf8_general_ci

mysql_users:
  - name: "{{ vagrant_machine_name }}"
    host: "%"
    password: "{{ vagrant_machine_name }}"
    priv: "{{ vagrant_machine_name }}%.*:ALL"

# Comment out any extra utilities you don't want to install. If you don't want
# to install *any* extras, set this value to an empty set, e.g. `[]`.
installed_extras:
  - adminer
  # - blackfire
  # - drupalconsole
  - drush
  # - elasticsearch
  # - java
  - mailhog
  # - memcached
  # - newrelic
  # - nodejs
  - pimpmylog
  # - redis
  # - ruby
  # - selenium
  # - solr
  # - tideways
  # - upload-progress
  # - varnish
  # - xdebug
  # - xhprof # use `tideways` if you're installing PHP 7+

# Add any extra apt or yum packages you would like installed.
extra_packages:
  - sqlite
  - imagemagick
  - libmagickwand-dev
  - libzip4
  - php7.0-zip

# PHP Configuration. Currently-supported versions: 7.2, 7.3, 7.4.
# See version-specific notes: http://docs.drupalvm.com/en/latest/configurations/php/
php_version: "7.3"
php_install_recommends: no
php_memory_limit: "4096M"
php_display_errors: "On"
php_display_startup_errors: "On"
php_realpath_cache_size: "1024K"
php_sendmail_path: "/opt/mailhog/mhsendmail"
php_opcache_enabled_in_ini: true
php_opcache_memory_consumption: "192"
php_opcache_max_accelerated_files: 4096
php_max_input_vars: "4000"
php_post_max_size: "1024M"
php_upload_max_filesize: "1024M"
php_ini_template_dir: "{{ post_provision_dir }}/templates"

# Extra packages to install (in addition to distro-specific default lists).
php_packages_extra:
  - "php{{ php_version }}-bz2"
  - php-imagick
  - php-gd
  - php-zip
  - "php{{ php_version }}-soap"
  - "php{{ php_version }}-bcmath"

# Drupal VM defaults to using PHP-FPM with either Apache or Nginx. If you wish
# to instead use Apache + mod_php with an Ubuntu base box, make sure you add
# libapache2-mod-php7.0 to `extra_packages` elsewhere in this config file.
php_enable_php_fpm: true
php_fpm_listen: "127.0.0.1:9000"

composer_path: /usr/bin/composer
composer_home_path: "/home/{{ drupalvm_user }}/.composer"
composer_home_owner: "{{ drupalvm_user }}"
composer_home_group: "{{ drupalvm_user }}"
composer_global_packages:
  - { name: hirak/prestissimo, release: '^0.3' }

# Run specified scripts before or after VM is provisioned. Use {{ playbook_dir }}
# to reference the provisioning/ folder in Drupal VM or {{ config_dir }} to
# reference the directory where your `config.yml` is.
pre_provision_dir:  "../../../../box/pre_provision"
post_provision_dir:  "../../../../box/post_provision"
post_provision_setup_path: "{{ post_provision_dir }}/setup"
post_provision_template_path: "{{ post_provision_dir }}/templates"
post_provision_scripts:
  - "{{ post_provision_dir }}/post-provision.php"
# - "{{ playbook_dir }}/../examples/scripts/configure-solr.sh"
pre_provision_tasks_dir:
  - "{{ pre_provision_dir }}/pre-provision.yml"
post_provision_tasks_dir:
  - "{{ post_provision_dir }}/post-provision.yml"

# Node.js configuration (if enabled above).
# Valid examples: "6.x", "8.x", "10.x", etc.
nodejs_version: "10.x"
nodejs_npm_global_packages:
  - name: npm
nodejs_install_npm_user: "{{ drupalvm_user }}"
npm_config_prefix: "/home/{{ drupalvm_user }}/.npm-global"

# Ruby Configuration (if enabled above).
ruby_install_gems_user: "{{ drupalvm_user }}"
ruby_install_gems: []

# Pimp my Log settings.
pimpmylog_install_dir: /usr/share/php/pimpmylog
pimpmylog_grant_all_privs: true

# XDebug configuration. XDebug is disabled by default for better performance.
php_xdebug_version: 2.9.5
php_xdebug_default_enable: 0
php_xdebug_coverage_enable: 0
php_xdebug_cli_disable: yes
php_xdebug_remote_enable: 1
php_xdebug_remote_connect_back: 1
php_xdebug_idekey: PHPSTORM
php_xdebug_max_nesting_level: 256
php_xdebug_remote_host: "{{ ansible_default_ipv4.gateway }}"

# Java configuration.
java_packages:
  - "{{ 'openjdk-8-jdk' if ansible_os_family == 'Debian' else 'java-1.8.0-openjdk' }}"

# Solr configuration.
solr_version: "7.7.2"
solr_xms: "64M"
solr_xmx: "128M"

# SSH configuration.
known_hosts_path: ~/.ssh/known_hosts
ssh_home: "{{ drupal_composer_install_dir }}"
ssh_key_path: "~/.vagrant.d/insecure_private_key"
insecure_ssh_key_path: "~/.vagrant.d/insecure_private_key"
secure_ssh_key_path: "{{ post_provision_setup_path }}/secure_private_key"
ssh_dest_path: "/home/{{ drupalvm_user }}/.ssh/insecure_private_key"
insecure_ssh_dest_path: "/home/{{ drupalvm_user }}/.ssh/insecure_private_key"
secure_ssh_dest_path: "/home/{{ drupalvm_user }}/.ssh/secure_private_key"
bash_profile_path: "{{ post_provision_setup_path }}/bash_profile"
bash_profile_dest: /home/vagrant/.bash_profile
bashrc_path: "{{ post_provision_setup_path }}/bashrc"
bashrc_dest: /home/vagrant/.bashrc

# Dashboard configuration.
dashboard_template_dir: "{{ post_provision_dir }}/templates"
dashboard_install_dir: /var/www/dashboard
hostname_configure: true
hostname_fqdn: "{{ vagrant_hostname }}"
